x-airflow-common: 
  &airflow-common
  build: ./
  image: ${AIRFLOW_IMAGE_NAME:-extend_airflow_e_commerce:latest}
  environment: &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__FERNET_KEY: ""
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    # Connexions Postgres
    AIRFLOW_CONN_PROD_DB_CONN: '{"conn_type": "postgres", "login": "postgres", "password": "postgres", "host": "postgres-prod", "port": 5432, "schema": "e_commerce_database"}'
    AIRFLOW_CONN_ANALYTICS_DB_CONN: '{"conn_type": "postgres", "login": "postgres", "password": "postgres", "host": "postgres-etl", "port": 5432, "schema": "ecommerce_metrics"}'
    # Connexion Minio
    AIRFLOW_CONN_MINIO_S3: '{"conn_type": "aws", "login": "minioadmin", "password": "minioadmin", "host": "http://minio:9000", "extra": {"endpoint_url": "http://minio:9000", "region_name": "us-east-1"}}'

  volumes:
    - ./dags:/opt/airflow/dags
    - ./plugins:/opt/airflow/plugins
    - ./logs:/opt/airflow/logs
    - ./dump:/opt/airflow/dump
  user: "${AIRFLOW_UID:-50000}:0"
  depends_on:
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      retries: 5
      start_period: 10s
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    depends_on : 
      data_genrator : 
        condition: service_completed_successfully

  data-genrator : 
    image : data_genrator
    build : ./data_genrator
    depends_on:
      postgres-prod:
        condition: service_healthy
    volumes:
      - ./data_genrator:/opt/airflow/data_genrator

  postgres-etl:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ecommerce_metrics
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
      start_period: 10s
    volumes:
      - postgres-etl-db-volume:/var/lib/postgresql/data
      - ./init-analytics.sql:/docker-entrypoint-initdb.d/init-analytics.sql
    depends_on : 
      data_genrator : 
        condition: service_completed_successfully

  postgres-prod:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: e_commerce_database
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
      start_period: 10s
    ports:
      - "5434:5432"
    volumes:
      - postgres-prod-db-volume:/var/lib/postgresql/data
      - ./init-prod.sql:/docker-entrypoint-initdb.d/init-prod.sql

  airflow-scheduler:
    <<: *airflow-common
    depends_on:
      - airflow-init
    healthcheck:
      test: ["CMD-SHELL", "[ -f /opt/airflow/airflow-scheduler.pid ]"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    command: airflow scheduler

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "[ -f /opt/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: always

  airflow-init:
    <<: *airflow-common
    command: airflow db init
    depends_on:
      - postgres
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: "true"
      _AIRFLOW_WWW_USER_CREATE: "true"
      _AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_PASSWORD:-airflow}

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
      - ./entrypoint.sh:/entrypoint.sh:ro
    depends_on:
      - airflow-webserver
    entrypoint: /bin/sh
    command: -c "chmod +x /entrypoint.sh && /entrypoint.sh"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  superset:
    build:
      context: ./superset
      dockerfile: dockerfile
    container_name: superset
    environment:
      - ADMIN_USERNAME=admin
      - ADMIN_EMAIL=admin@superset.com
      - ADMIN_PASSWORD=admin
      - LOAD_EXAMPLES=yes
    depends_on:
      - airflow-webserver
    ports:
      - '8088:8088'

volumes:
  postgres-db-volume:
  minio_data:
  superset_data:
  postgres-etl-db-volume:
  postgres-prod-db-volume: