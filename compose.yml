x-airflow-common: 
  &airflow-common
  build : ./
  image: ${AIRFLOW_IMAGE_NAME:-extend_airflow:latest}
  environment : &airflow-common-env
    AIRFLOW__CORE__EXECUTOR : LocalExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN : postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND : db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__FERNET_KEY : ""
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION : "true"
    AIRFLOW__CORE__LOAD_EXAMPLES : "false"

  volumes :
    - ./dags:/opt/airflow/dags
    - ./plugins:/opt/airflow/plugins
    - ./logs:/opt/airflow/logs
    - ./dump:/opt/airflow/dump
  user : "${AIRFLOW_UID:-50000}:0"
  depends_on :
    postgres:
      condition : service_healthy

services:

  postgres : 
    image : postgres:13
    environment :
      POSTGRES_USER : airflow
      POSTGRES_PASSWORD : airflow
      POSTGRES_DB : airflow
    healthcheck :
      test : ["CMD-SHELL", "pg_isready -U airflow"]
      interval : 5s
      retries : 5
      start_period : 10s
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  airflow-scheduler : 
    << : *airflow-common
    depends_on :
      - airflow-init
      - postgres
    healthcheck :
      test : ["CMD-SHELL", "[ -f /opt/airflow/airflow-scheduler.pid ]"]
      interval : 10s
      timeout : 10s
      retries : 5
    restart: always
    command: >
      bash -c "airflow pools set hors_pns_pool 10 'Pool pour les tâches Hors-PNS'; airflow pools set pns_pool 10 'Pool pour les tâches PNS'; exec airflow scheduler"
    

  airflow-webserver : 
    << : *airflow-common
    command : webserver
    depends_on :
      airflow-init:
        condition: service_completed_successfully
    ports :
      - "8080:8080"
    healthcheck :
      test : ["CMD-SHELL", "[ -f /opt/airflow/airflow-webserver.pid ]"]
      interval : 30s
      timeout : 30s
      retries : 3
    restart: always


  airflow-init : 
    << : *airflow-common
    command : airflow db init
    depends_on :
      - postgres
    environment :
      << : *airflow-common-env
      _AIRFLOW_DB_UPGRADE : "true"
      _AIRFLOW_WWW_USER_CREATE : "true"
      _AIRFLOW_WWW_USER_USERNAME : ${AIRFLOW_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD : ${AIRFLOW_PASSWORD:-airflow}

  


volumes:
  postgres-db-volume:



